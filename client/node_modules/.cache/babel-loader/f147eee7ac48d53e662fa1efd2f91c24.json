{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kukulj\\\\Desktop\\\\chat4\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport { queryString } from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../infoBar/InfoBar';\nlet socket;\nconst Chat = _ref => {\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages({\n        ...messages,\n        message\n      });\n    });\n  }, [messages]);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  //funkcija za slanje poruka\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  })));\n};\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","_ref","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Kukulj/Desktop/chat4/client/src/components/Chat/Chat.js"],"sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {queryString} from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css'\r\nimport InfoBar from '../infoBar/InfoBar';\r\n\r\nlet socket;\r\n    \r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState ('');\r\n    const [room, setRoom] = useState ('');\r\n    const [message, setMessage] = useState ('');\r\n    const [messages, setMessages] = useState ([]);\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n        \r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n    \r\n        socket = io(ENDPOINT);\r\n    \r\n        setRoom(room);\r\n        setName(name)\r\n    \r\n       \r\n            socket.emit('join', {name, room}, () => {\r\n\r\n            });\r\n\r\n            return () => {\r\n                socket.emit('disconnect');\r\n\r\n                socket.off();\r\n            }\r\n        }, [ENDPOINT, location.search]);\r\n\r\n        useEffect(()=>{\r\n            socket.on('message', (message)=>{\r\n                setMessages({...messages,message});\r\n            })\r\n        }, [messages]);\r\n\r\n        const sendMessage = (event) => {\r\n         event.preventDefault();\r\n\r\n            if(message){\r\n                socket.emit('sendMessage', message, () => setMessage (''));\r\n            }\r\n        }\r\n\r\n\r\n   //funkcija za slanje poruka\r\n\r\n\r\n    return (\r\n<div className='outerContainer'>\r\n    <div className='container'>\r\n\r\n    <InfoBar room={room} />\r\n         {/*<Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} /> /*}\r\n    </div>\r\n    {/*<TextContainer users={users}/> */}\r\n    </div>\r\n</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAAQC,WAAW,QAAO,cAAc;AACxC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,oBAAoB;AAExC,IAAIC,MAAM;AAEV,MAAMC,IAAI,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACpB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAE,EAAE,CAAC;EACrC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAE,EAAE,CAAC;EACrC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAE,EAAE,CAAC;EAC3C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAE,EAAE,CAAC;EAC7C,MAAMiB,QAAQ,GAAG,gBAAgB;EAGjChB,SAAS,CAAC,MAAM;IACZ,MAAM;MAAEQ,IAAI;MAAEE;IAAK,CAAC,GAAGT,WAAW,CAACgB,KAAK,CAACV,QAAQ,CAACW,MAAM,CAAC;IAEzDd,MAAM,GAAGF,EAAE,CAACc,QAAQ,CAAC;IAErBL,OAAO,CAACD,IAAI,CAAC;IACbD,OAAO,CAACD,IAAI,CAAC;IAGTJ,MAAM,CAACe,IAAI,CAAC,MAAM,EAAE;MAACX,IAAI;MAAEE;IAAI,CAAC,EAAE,MAAM,CAExC,CAAC,CAAC;IAEF,OAAO,MAAM;MACTN,MAAM,CAACe,IAAI,CAAC,YAAY,CAAC;MAEzBf,MAAM,CAACgB,GAAG,EAAE;IAChB,CAAC;EACL,CAAC,EAAE,CAACJ,QAAQ,EAAET,QAAQ,CAACW,MAAM,CAAC,CAAC;EAE/BlB,SAAS,CAAC,MAAI;IACVI,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAGT,OAAO,IAAG;MAC5BG,WAAW,CAAC;QAAC,GAAGD,QAAQ;QAACF;MAAO,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,MAAMQ,WAAW,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IAEnB,IAAGZ,OAAO,EAAC;MACPR,MAAM,CAACe,IAAI,CAAC,aAAa,EAAEP,OAAO,EAAE,MAAMC,UAAU,CAAE,EAAE,CAAC,CAAC;IAC9D;EACJ,CAAC;;EAGN;;EAGC,oBACJf,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BlC,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE1BlC,KAAA,CAAA2B,aAAA,CAACtB,OAAO;IAACO,IAAI,EAAEA,IAAK;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAKjB,CACJ;AAGN,CAAC;AAED,eAAe3B,IAAI"},"metadata":{},"sourceType":"module"}